_id: req_0f5daaeac67c42348f9c182493dd0c9a
type: Request
parentId: wrk_88ac2382df1d4fbd8a0eac514c8ae4a6
modified: 1647883332775
created: 1647883134494
url: http://localhost:3000/db/mydb/query
name: db/:dbname/query
description: >-
  ### POST /db/:dbname/query


  Queries the database :dbname.


  Returns a list of found items as a JSON array.


  ```shell

  curl https://localhost:3000/db/docstore/query -X GET -H "Content-Type: application/json" --data '{"values":[]}'

  ```


  ```json

  [{"project":"OrbitDB","site":"https://github.com/orbitdb/orbit-db","likes":200},{"project":"IPFS","site":"https://ipfs.io","likes":400}]

  ```


  To query a subset of data, a condition can be specified. For example, to

  retrieve only those entries which have a total number of likes above 300:


  ```shell

  curl https://localhost:3000/db/docstore/query -H "Content-Type: application/json" --data '{"propname":"likes","comp":"gt","values":[300]}'

  ```


  ```json

  [{"project":"IPFS","site":"https://ipfs.io","likes":400}]

  ```


  Available operator short-codes are:


  ```eq```    propname equals value. Equivalent to "=="


  ```ne```    propname is not equals to value. Equivalent to "!="


  ```gt```    propname is greater than value. Equivalent to ">"


  ```lt```    propname is less than value. Equivalent to "<"


  ```gte```   propname is greater than or equal to value. Equivalent to ">="


  ```lte```   propname is less than or equal to value. Equivalent to "<="


  ```mod```   Perform a modulus calculation on propname using value. Equivalent to "%"


  ```range``` Perform a range query, comparing propname to min and max.


  ```all```   Fetch all records for field propname. Equivalent to "*"


  #### Modulus Query


  When using a modulus query, you must supply the divisor and the remainder. For example, to obtain all likes which are multiples of 100, you would specify a divisor 100 and a remainder 0:


  ```shell

  curl -X POST https://localhost:3000/db/docstore/query -H "Content-Type:application/json" --data '{"propname":"likes", "comp":"mod", "values":[100,0]}'

  ```


  ```json

  [{"site":"https://ipfs.io","likes":400,"project":"IPFS"},{"site":"https://github.com/orbitdb/orbit-db","likes":200,"project":"OrbitDB"}]

  ```


  #### Range Query


  When specifying a range query, you must supply the min and max

  values. For example, to obtain all likes greater than 250 but less than 1000 the min and max must be supplied:


  ```shell

  curl -X GET https://localhost:3000/db/docstore/query -H "Content-Type:application/json" --data '{"propname":"likes", "comp":"range", "values":[250,1000]}'

  ```


  ```json

  [{"site":"https://ipfs.io","likes":400,"project":"IPFS"},{"site":"https://github.com/orbitdb/orbit-db","likes":200,"project":"OrbitDB"}]

  ```
method: POST
body:
  mimeType: application/json
  text: ""
parameters:
  - id: pair_e3f86de095974860ab4f789b3e178320
    name: dbname
    value: test
    description: ""
    disabled: true
headers:
  - name: Content-Type
    value: application/json
    id: pair_a3adb6f6cc62452092bb6e74c6179490
authentication: {}
metaSortKey: -1647882014035
isPrivate: false
settingStoreCookies: true
settingSendCookies: true
settingDisableRenderRequestBody: false
settingEncodeUrl: true
settingRebuildPath: true
settingFollowRedirects: global
